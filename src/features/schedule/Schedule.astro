---
import SectionTitle from "../../shared/components/SectionTitle.astro";
---

<section id="horarios" class="py-20 bg-light">
  <div class="container mx-auto px-4">
    <SectionTitle
      title="Horarios y Actividades"
      subtitle="Te invitamos a ser parte de nuestras reuniones semanales."
    />
    <div
      id="activities-list"
      class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
    >
      <p>Cargando actividades...</p>
    </div>

    <div class="mt-12 bg-secondary rounded-2xl p-6 text-muted">
      <!-- Notas importantes aquí, igual que antes -->
    </div>
  </div>
</section>

<script type="module">
  // Función simple para parsear CSV básico (sin librerías)
  function parseCSV(text) {
    const lines = text.trim().split("\n");
    const headers = lines.shift().split(",");
    return lines.map((line) => {
      const values = line.split(",");
      const obj = {};
      headers.forEach((h, i) => {
        obj[h] = values[i]?.trim().replace(/^"|"$/g, "") || "";
      });
      return obj;
    });
  }

  function normalizeKeys(obj) {
    const clean = {};
    for (const key in obj) {
      const cleanKey = key.trim();
      clean[cleanKey] = obj[key];
    }
    return clean;
  }

  // Agrupa por día y ordena
  function groupActivities(records) {
    const grouped = {};
    for (const r of records) {
      const record = normalizeKeys(r);
      console.log(Object.keys(record));
      const day = record["Día"];
      if (!grouped[day]) grouped[day] = [];
      grouped[day].push({
        time: record["Hora"],
        name: record["Nombre"],
        description: record["Descripción"] || "",
      });
    }
    return grouped;
  }

  // Renderiza el HTML de actividades y lo inserta
  function renderActivities(activities) {
    const container = document.getElementById("activities-list");
    container.innerHTML = ""; // limpia loading

    activities.forEach((daySchedule) => {
      const dayDiv = document.createElement("div");
      dayDiv.className =
        "relative bg-white rounded-2xl shadow-xl overflow-hidden hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 group flex flex-col";

      dayDiv.innerHTML = `
        <div class="bg-primary text-white py-4 px-6 rounded-t-2xl">
          <h3 class="text-2xl font-bold">${daySchedule.day}</h3>
        </div>
        <ul class="divide-y divide-gray-200 flex-grow">
          ${daySchedule.items
            .map(
              (activity) => `
            <li class="p-6 transition-colors duration-200 even:bg-gray-50">
              <div class="flex justify-between items-start mb-2">
                <span class="font-semibold text-primary text-lg">${activity.name}</span>
                <span class="bg-accent/10 text-accent font-medium rounded-full px-3 py-1 text-sm flex-shrink-0 ml-4">${activity.time}</span>
              </div>
              <p class="text-muted text-base leading-relaxed">${activity.description}</p>
            </li>
          `
            )
            .join("")}
        </ul>
      `;

      container.appendChild(dayDiv);
    });
  }

  // Fetch CSV y proceso
  async function loadAndRender() {
    try {
      const res = await fetch(
        "https://docs.google.com/spreadsheets/d/e/2PACX-1vR4XzDJqvpAjvn_0i5ywXWKon4O04mn0IYu8esPjH8U4BM4dHB84jZVWLm_8isG95pbbjGt3QTTiZ5E/pub?gid=0&single=true&output=csv&t=" +
          Date.now()
      );
      const text = await res.text();
      const records = parseCSV(text);
      const grouped = groupActivities(records);
      const activities = Object.entries(grouped).map(([day, items]) => ({
        day,
        items,
      }));
      renderActivities(activities);
    } catch (e) {
      document.getElementById("activities-list").innerHTML =
        "<p>Error cargando actividades.</p>";
      console.error(e);
    }
  }

  loadAndRender();
</script>