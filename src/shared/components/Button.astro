---
interface Props {
  text: string;
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
}

const { 
  text, 
  href, 
  variant = 'primary', 
  size = 'md',
  class: className = '' 
} = Astro.props;

const baseClasses = "inline-flex items-center justify-center rounded-lg font-medium transition-all duration-300 hover:-translate-y-0.5 focus:outline-none focus:ring-2 focus:ring-offset-2";

const variantClasses = {
  primary: 'bg-sky-blue hover:bg-sky-blue/90 text-white shadow-lg hover:shadow-sky-blue/20 focus:ring-sky-blue',
  secondary: 'bg-hope-green hover:bg-hope-green/90 text-white shadow-lg hover:shadow-hope-green/20 focus:ring-hope-green',
  outline: 'bg-transparent border-2 border-sky-blue text-faith-blue hover:bg-sky-blue/10 focus:ring-sky-blue'
};

const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2',
  lg: 'px-6 py-3 text-lg'
};

const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;
---

{
  href ? (
    <a href={href} class={classes}>
      {text}
    </a>
  ) : (
    <button class={classes}>
      {text}
    </button>
  )
}